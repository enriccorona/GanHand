import os.path
from data.dataset import DatasetBase
from PIL import Image
import random
import numpy as np
import pickle
import os
from utils import cv_utils
from skimage.transform import resize
import torch
from sklearn.cluster import KMeans
import socket
from scipy import ndimage

import point_cloud_utils as pcu

import sys


import os.path
from data.dataset import DatasetBase
import random
import numpy as np
import pickle
import os
from utils import cv_utils
from skimage.transform import resize
import torch
import socket
from scipy import ndimage
from utils import util
import torchvision
from PIL import Image

import glob

from .dataset_real_imgs import fast_load_obj

def pil_loader(path):
    # open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)
    with open(path, 'rb') as f:
        img = Image.open(f)
        return np.array(img)


def getBB(depth):
    objs = ndimage.find_objects((depth > 0)*1)[0]
    x, x2 = objs[0].start, objs[0].stop
    y, y2 = objs[1].start, objs[1].stop

    return x, y, x2, y2


class Dataset(DatasetBase):
    def __init__(self, opt, mode):
        super(Dataset, self).__init__(opt, mode)
        self._name = 'Dataset_obman'
        self.pc_name = socket.gethostname()

        # read dataset
        self._read_dataset_paths()
        self.noise_units = 12
        self.loader = pil_loader

        textures = []
        filetextures = glob.glob('/tmp-network/fast/ecorona/data/background-textures/*')
        #filetextures = os.listdir('/tmp-network/fast/ecorona/data/background-textures/')
        for i in range(len(filetextures)):
            textures.append(self.loader(filetextures[i]))
            #textures.append('/tmp-network/fast/ecorona/data/background-textures/' + self.loader(filetextures[i]))
        self.textures = np.array(textures)

        #self.get_angle_camera_maximumdirection()
        #self.get_percentage_seen_points()

    def __getitem__(self, index):
        assert (index < self._dataset_size)

        path = self._imgs_rgb_dir + '/' + self._ids[index] + '.jpg'
        mask_path = self._imgs_masks_dir + '/' + self._ids[index] + '.png'
        img = self.loader(path)
        mask = self.loader(mask_path)[:, :, 0]

        texture = self.textures[np.random.randint(len(self.textures))].copy()
        xposition = np.random.randint(np.shape(texture)[0] - 256)
        yposition = np.random.randint(np.shape(texture)[1] - 256)
        img[mask!=100] = texture[xposition:xposition+256, yposition:yposition+256][mask!=100]

        img = np.float32(img)/255

        img = img - self.means_rgb
        img = img / self.std_rgb

        noise = np.random.normal(0, 1.0, (self.noise_units, 1, 1))
        noise = noise.repeat(256, 1).repeat(256, 2)

        # TODO: CONSIDER LOADING ALL THESE AND SAMPLE BEFOREHAND!
        #points_object = 0
        #faces_object = 0

        # For train time, object points were previously obtained and resampled
        points_object, faces_object = self.load_obj_details(index)

        # pack data
        sample = {'rgb_img': img,
                  'coords_3d': self.coords_3d[index],
                  'noise_img': noise,
                  'label': self.labels[index],
                  'cluster': self.clusters[self.labels[index], -48:],
                  'verts_3d': np.float32(self.verts_3d[index]),
                  'coords_3d': self.coords_3d[index],
                  'pca_poses': self.pca_poses[index],
                  #'3d_points_object_resampled': points_object,
                  #'angle_between_normal_and_cameradirection': self.angles[index],
                  #'percentage_visible_points': self.percentage_visible_points[index],
                  '3d_points_object': points_object,
                  '3d_faces_object': faces_object,
                  'object_directions': self.obj_normals[index],
                  'object_translation': self.obj_translations[index],
                  'mano_rotation': self.mano_rotation[index],
                  'mano_translation': self.mano_translation[index]
                  }

        return sample

    def __len__(self):
        return self._dataset_size

    def load_obj_details(self, index):
        path = '/tmp-network/fast/ecorona/data/ShapeNetCore.v2/' + str(self.obj_path[index])
        path = str.split(path, 'model_normalized.obj')[0]
        path = path + 'model_watertight.obj'

        with open(path, 'rb') as f:
            mesh = fast_load_obj(f)[0]

            points = mesh['vertices']
            faces = mesh['faces']

        # Obtained from obman repo: https://github.com/hassony2/obman/blob/master/obman/obman.py#L400
        transform = self.obj_transforms[index]
        points = np.concatenate([points, np.ones([points.shape[0], 1])], axis=1)
        points = transform.dot(points.T).T[:, :3]

        return points, faces

    def _read_dataset_paths(self):
        if self._mode == 'test' and self.pc_name == 'tro':
            self._root_dir = '/DATA/ecorona/obman/obman/test/'
        else:
            self._root_dir = os.path.join(self._opt.data_dir, self._mode)
        self._imgs_rgb_dir = os.path.join(self._root_dir, 'rgb_obj')
        self._imgs_masks_dir = '/tmp-network/fast/ecorona/data/original_obman/obman/'+self._mode+'/segm/'
        self._imgs_depth_dir = os.path.join(self._root_dir, 'obtained_depth_objs')
        self._imgs_further_depth_dir = os.path.join(self._root_dir, 'obtained_further_depth_objs')
        self._masks_dir = os.path.join(self._root_dir, 'segm')
        self._meta_dir = os.path.join(self._root_dir, 'processed_meta')

        # read ids
        self._ids = self._read_ids(self._meta_dir, '.pkl')
        self._ids.sort()

        # DEMO:
        #self._ids = self._ids[:10]
        #self._ids = self._ids[:50]
        #self._ids = self._ids[:1000]

        # dataset size
        self._dataset_size = len(self._ids)

        # read imgs
        self._read_meta()

        # read obj characteristics
        self.obj_normals = np.load(self._root_dir + '/obtained_normals_objects.npy')
        self.obj_translations = np.load(self._root_dir + '/obtained_translations_objects.npy')

        # Obtained from train set
        self.means_rgb = [0.485, 0.456, 0.406]
        self.std_rgb = [0.229, 0.224, 0.225]

        k = self._opt.k
        km = KMeans(n_clusters=k)
        rot_importance = 15
        try:
            self.clusters = np.load('clustersk'+str(k)+'norot.npy')
        except:
            from IPython import embed
            embed()
            # For the first time, let's just compute and save clusters from train data
            if self._mode != 'train':
                raise('Get clusters from train data for the first time')

            self.clusters = self.get_clusters_kmeans(k=k, rot_importance=0)
            np.save('clustersk'+str(k)+'norot.npy', self.clusters)

        km.cluster_centers_ = self.clusters
        # Let's give 'rot_importance' more importance to rotation - it's only 3 values vs 45 from hand pose
        self.labels = km.predict(self.pca_poses)

    def _read_ids(self, file_path, extension):
        files = os.listdir(file_path)
        files = [f.replace(extension, '') for f in files]
        return files

    def _read_meta(self):
        if sys.version_info[0]==2:
            # I'm using python2 for visualising nicely! But pickle loading fails... So I'll just load everything here from a preprocessed version

            self.coords_3d = np.load('preprocessed_ycb_test/coords_3d.npy')
            self.coords_2d = np.load('preprocessed_ycb_test/coors_2d.npy')
            self.pca_poses = np.load('preprocessed_ycb_test/pca_poses.npy')
            self.verts_3d = np.load('preprocessed_ycb_test/verts_3d.npy')
            self.hand_pose = np.load('preprocessed_ycb_test/hand_pose.npy')
            self.grasp_qualities = np.load('preprocessed_ycb_test/grasp_qualities.npy')
            self.mano_rotation = np.load('preprocessed_ycb_test/mano_rotation.npy')
            self.mano_translation = np.load('preprocessed_ycb_test/mano_translation.npy')
            self.obj_transforms = np.load('preprocessed_ycb_test/obj_transforms.npy')
            self.obj_path = np.load('preprocessed_ycb_test/obj_path.npy')
            return

        coords_3d = []
        coords_2d = []
        pca_poses = []
        verts_3d = []
        hand_pose = []
        obj_transforms = []
        grasp_qualities = []
        mano_rotation = []
        mano_translation = []
        obj_path = []
        for i in range(self._dataset_size):
            filepath = self._meta_dir + '/' + self._ids[i] + '.pkl'
            with open(filepath, 'rb') as f:
                gt = pickle.load(f)
                coords_3d.append(gt['coords_3d'])
                coords_2d.append(gt['coords_2d'])
                pca_poses.append(gt['pca_pose'])
                verts_3d.append(gt['verts_3d'])
                hand_pose.append(gt['hand_pose'])
                obj_transforms.append(gt['affine_transform'])
                grasp_qualities.append(gt['grasp_quality'])
                mano_rotation.append(gt['additional_rot'][:, 0])
                mano_translation.append(gt['additional_trans'])
                obj_path.append(gt['obj_path'][47:])
        self.coords_3d = np.array(coords_3d)
        self.coords_2d = np.array(coords_2d)
        self.pca_poses = np.array(pca_poses)
        self.verts_3d = np.float16(verts_3d)
        self.hand_pose = np.array(hand_pose)
        self.grasp_qualities = np.array(grasp_qualities)
        self.mano_rotation = np.array(mano_rotation)
        self.mano_translation = np.array(mano_translation)
        self.obj_transforms = np.array(obj_transforms)
        self.obj_path = obj_path
        return

    def collate_fn(self, args):
        length = len(args)
        keys = list(args[0].keys())
        data = {}

        for i, key in enumerate(keys):
            data_type = []

            if key == 'rgb_img' or key == 'depth_img' or key == 'noise_img' or key == 'further_depth_img' or key=='object_directions' or key=='object_translation' or key == 'coords_3d' or key == 'mano_rotation' or key == 'mano_translation' or key == 'pca_poses':
                for j in range(length):
                    data_type.append(torch.DoubleTensor(args[j][key]))
                data_type = torch.stack(data_type)
            elif key == 'label':
                labels = []
                for j in range(length):
                    labels.append(args[j][key])
                data_type = torch.LongTensor(labels)
            else:
                for j in range(length):
                    data_type.append(args[j][key])
            data[key] = data_type

        return data

    def get_clusters_kmeans(self, k, rot_importance):
        km = KMeans(n_clusters=k)
        # Let's give 'rot_importance' importance to rotation - it's only 3 values vs 45 from hand pose
        km.fit(self.pca_poses)
        return km.cluster_centers_

# GET PERCENTAGE OF POINTS THAT ARE SEEN FROM INPUT IMAGE:
    def get_percentage_seen_points(self):
        percentages = []
        from utils import contactutils
        for index in range(self._dataset_size):
            exterior = None
            points_object, faces_object = self.load_obj_details(index)
            obj_triangles = points_object[faces_object].copy()

            #points_object[:, 2] -= 0.01
            if len(points_object) > 5000:
                points_object = points_object[::5]
            exterior = contactutils.batch_mesh_contains_points(
                torch.FloatTensor(points_object[np.newaxis]).cuda(), torch.FloatTensor(obj_triangles[np.newaxis]).cuda()
            )
            percentage_seen = (1-exterior).sum().float()/len(points_object)
            percentage_seen = percentage_seen.cpu().data.numpy()
            percentages.append(percentage_seen)

        self.percentage_visible_points = np.array(percentages)


# GET ANGLE BETWEEN CAMERA AND MAXIMUM DIRECTION OF THE OBJECT:
    def get_angle_camera_maximumdirection(self):
        from sklearn.decomposition import PCA
        pca = PCA(n_components=2)
        angles = []
        for index in range(self._dataset_size):
            points_object, faces_object = self.load_obj_details(index)
            pca.fit(points_object)

            normal = pca.components_[0]
            cam2obj = np.mean(points_object, 0)
            cam2obj = cam2obj/np.sqrt((cam2obj**2).sum())
            num = np.dot(cam2obj, normal)
            angle = np.arccos(num)
            angle = min(angle, np.pi - angle)
            angles.append(angle)

        self.angles = np.array(angles)


#####                                                                  #####
##### OBJECTS THAT ARE THE SAME IN DIFFERENT INPUT IMAGES AND TEXTURES #####
#####                                                                  #####

#[ 540  623  888 1866 1902 1989 2203 2204 2238 2515 2519 3218 3224 3304
# 3663 4726 4771 5903 6167 6217]
#[ 138  345  474 1259 1490 1510 1566 1608 1697 1794 1856 1921 2025 2416
# 2512 2632 3277 3284 3779 4140 4154 4532 4730 4975 5313 5675 5761 5901
# 6008]
#[  72  147  204  710  831  915  940 1085 1170 1322 1829 2213 2392 2407
# 2480 2575 2924 3157 3220 3430 3733 3815 3853 4414 4475 4534 4537 4746
# 5270 5334 5879]
#[  67  128 1935 3966 4292 5808 5833]
#[ 120  380  456  745  759  840 1162 1355 1579 2172 2281 2320 2411 2709
# 2715 2995 3045 3460 3474 3514 3826 3875 3877 4040 4480 4512 4606 5098
# 5105 5119 5171 5291 5663 5731 5751 5928 6032 6275]
#[   8  548  688 1386 1732 1998 3101 3459 4599 5397 5632]
#[ 105  179  265  756 1153 1233 2017 2706 2854 2887 2937 3027 3090 3261
# 3511 5348 5569 5881]
#[ 163  247  293  437  444  868 1932 2344 2447 2634 2725 3590 3776 3883
# 4276 4697 4713 4734 5749 5754 6106 6153]
#[  10  240  423  592  627 1580 1758 2136 2830 2898 3236 3270 3278 3438
# 3448 3682 3909 4049 4258 4502 4864 4971 5913 5943 6142]
#[  14  132  558  846 1378 1610 3247 3566 3580 3601 3638 3713 3830 4264
# 4482 4526 4742 4792 4866 5106 5312 5579 5774 5871 5963 5996 6090]
#[ 748 2994 4036 4055 4688 4834 5704 5714]
#[ 158  624  757  972 1051 1704 1847 2048 3039 3108 3437 3632 4031 4123
# 4236 4528 5061 5096 5278 5404 6128 6280]
#[  87  129 1348 1924 2757 3551 4489 4638 4737 4888 4997 6183]
#[  64  431 1504 1518 1743 1957 3295 3665 3721 4039 4197 4538 4720 4897
# 4914 5609]
#[ 814  912 1025 1887 1942 2108 2380 2962 3198 3568 4053 4124 4148 4155
# 4386 5028 5107 5543 5721 5920]
#[  96  635 1310 1346 1357 1647 1903 2038 2569 2707 2752 2888 3007 3010
# 3864 4118 4176 4723 5353 5671 5887 5908 6050]
#[ 445  527  611  927 1630 1636 2475 2514 2530 2730 3075 3209 3700 4318
# 4820 4925 5165 5253 5949]
#[ 582  720 1081 1204 1221 2261 2580 2942 3151 3391 3886 4404 4561 5256]
#[ 379  676  755 2372 5372 5501]
#[   2   56  304  335  614  864 1727 1978 2293 2343 2390 3012 3148 3326
# 3337 3461 3783 4057 4205 4369 5215 5269 5479 5843 6134 6236]
#[ 530  622  657  777 1147 1632 1637 2194 2461 2526 2609 2656 3228 3756
# 3948 4087 4164 4240 4265 4422 4917 5095 6058 6086 6201]
#[ 108  625  969 1023 1039 1314 1759 1760 3320 3615 3774 4116 4202 4300
# 4733 4772 4786 5476 5647 5775 5910]
#[ 599  645 1340 1802 2232 3072 4333 4493 4521 4663 5361 5812 6135 6193]
#[ 232  897  906  923  934 1111 1179 1187 1592 1703 2922 2975 3426 3627
# 3748 4700 4937 5333 5875 6061]
#[ 938 1235 1474 1687 1865 1975 2072 2324 2528 2763 2931 2972 3646 4194
# 4464 4947 4991 5148 5455 5538 6004]
#[ 511  845 1809 1976 2127 2482 2509 3087 3135 3455 3831 3975 4011 4029
# 4433 4450 4676 4843 4898 5823 5907]
#[ 258  277  510 1838 1948 2009 2091 2384 3208 3543 3887 4005 4751 4996
# 5524 5589 5678 5989]
#[  51  172 1597 1740 1762 1787 2210 2280 3731 3846 4097 4423 4617 4809
# 5725 5927 6184]
#[  40  101  775  803 1021 1055 1363 1444 1585 2080 3034 3457 3892 4141
# 4371 4392 4622 6063 6097]
#[  54  442  508  521  735 1698 1824 1981 2208 2315 2599 2981 3142 3565
# 5108 5236 5792 6143]
#[ 847  994 1414 1418 1683 3092 3116 3138 3357 3623 4816 4945 5002 5226
# 5739 5818]
#[ 160  166  528  725  870  872  999 1168 1209 1248 1492 1958 1966 2051
# 2151 2430 2809 3275 3350 3584 3901 4188 4278 4443 4630 4685 4854 5163
# 5603 5665 5763 5977]
#[1129 1682 2033 2872 3675 3837 4584 5895 6233]
#[ 480  954 1011 2141 2776 4889 5033 5904]
#[1131 1722 1896 1977 2239 2616 3093 3389 4018 4547 5572 5772 5793]
#[ 697  835 1227 2047 2206 2360 3472 3600 3991 4128 4611 5290 5500 6075
# 6211 6226]
#[ 387  583  740  979 1205 2327 2710 3031 4076 4109 4150 4273 4370 4372
# 4655 4806 5223 5231 5328 5491]
#[ 774 1093 1117 1392 1604 1617 1618 1894 2200 2387 2403 2637 3301 3347
# 3410 3498 4691 4892 4916 5104 5371 5447 6166]
#[ 116  135  167  207 1201 1319 1352 1413 2010 2216 2338 2567 2659 3017
# 3026 3311 3687 3957 4033 4585 4853 5180 5422 5896 5898 6051]
#[ 366  469  800  959 1121 1271 1299 1300 1365 1634 1763 1901 2504 2618
# 2736 2748 2965 3029 3192 3611 3987 4801 5437 5564 5642 5726 5802 6067
# 6118]
#[  79  295  701  744  797  885 1864 2153 2602 2604 2750 2808 2959 3098
# 3297 3717 4072 4604 4775 4796 5053 5384 5388 5736 5766 6204]
#[  41 1068 1202 1446 1458 1712 2044 2073 2497 2919 3040 3044 3189 3249
# 3925 4177 4326 4344 4415 4427 4711 4891 4974 5170 5172 5463 5493 5509
# 5619 5637 5737 6043 6072]
#[ 239  449 1047 1219 2440 2454 2508 3690 3854 3914 4286 4762 6194]
#[ 183  214  274  502 1120 1124 1264 1337 1725 2414 2442 2780 3546 3792
# 4266 4275 4304 4485 4593 5496 5947 6044]
#[ 832  971 1281 2071 2470 3699 3722 3910 4291 5034 5768 5838 5971 6024]
#[ 586  794 1423 1852 1880 2807 2864 3479 3610 3767 4873 5140 5292 6218]
#[ 103  526  616  830 1533 1543 1553 1673 1765 2043 2398 3133 3245 3291
# 3293 4216 4305 4451 4755 5154 5188 5311 5597 5941 6273]
#[  70   86  712 1166 1719 1757 2124 2861 3274 3595 4207 4413 4969 5130
# 6081 6279]
#[ 215  403  439  514  802 1024 1401 1457 1563 1603 1663 1788 1923 1960
# 2231 2378 2579 2668 2784 3250 3299 3513 3706 3753 4027 4690 4814 5205
# 5302 5606 5784 6019]
#[ 466  612  848  911 1073 1165 1374 1482 1664 1873 2163 2355 2503 2524
# 2584 2827 2857 3919 4457 4955 5441 5504 5966 6271]
#[ 424  993 1189 1305 1334 1396 1642 1889 2111 2690 2844 2859 3469 3728
# 3980 4105 4435 4756 5517 5703 5842 5919]
#[  94  481  922  998 1502 1581 1769 1811 3073 3161 3241 3381 3729 3976
# 4256 5411 5417 5826 6158]
#[ 287  876  981 1296 2247 2744 3655 3657 4200 5560 5612 5873 5955]
#[ 278  311  579  666  731 1254 1515 1622 1792 2012 2351 2855 3359 3361
# 3947 4860 5001 5191 5448 5661 6114 6216]
#[ 141  361 1440 1655 2283 2448 2915 2945 3004 3059 3099 3159 3374 3605
# 4012 4233 4334 5071 5143 5228 5545 5728 5980]
#[ 193  381  468  737  769 1241 1329 1376 1586 2966 3114 4091 4156 4505
# 4874 5638 5724 5912 6018 6220]
#[ 634  729  874  974 1629 1907 1911 2941 2997 3184 3325 3885 4022 4645
# 5131 5760 5911 5931]
#[ 704  730  746  762  926 1034 1293 1422 1540 1752 2007 2215 3080 3760
# 4104 4206 4293 4818 4884 4940 5214]
#[ 434 1619 1711 1845 2156 2818 2871 3113 3273 3575 3648 3723 3985 4113
# 4120 4568 4686 4780 4787 5330 5958 5991]
#[ 353  743 1343 1884 2263 2383 2594 2783 3412 3558 3858 4250 4441 4557
# 4641 4648 4935 5241 5573 5807]
#[ 200 1633 1691 2495 2688 3210 3574 3752 3766 4500 4896 4985 5229 5950
# 5998 6151]
#[ 565 1004 1113 1146 1514 2055 2332 3127 3406 3579 3807 4195 4222 4555
# 5017 5087 5381 5426 5508 5951 6145 6237 6261]
#[ 162  452  905 2663 3714 3912 4347 5473 5587 5616 5891 6173]
#[ 636  781 1263 1868 1949 2717 2889 2917 2982 3197 3207 4595 4934 5090
# 5153 5219 5537 5656 5954 6083 6162]
#[ 223  323  977 1194 1676 2126 3659 3734 3955 3972 4185 4235 4289 4468
# 4739 5079 5354 5695 5778 6192 6230]
#[ 382  602  671 1584 1955 2306 2318 3341 3462 3606 3834 5490]
#[1240 1805 2221 4411 4757 4963 5431 5653]
#[ 189  318  393  397  413 1123 1267 1269 1279 1304 1354 1700 1771 1839
# 2219 2233 2406 2421 2607 2647 2773 3532 3536 3652 3674 3739 3871 4129
# 4226 4364 4939 4949 5036 5326 5340 5498 5693 5916 5992 6000 6066 6202]
#[  45  226  276  348 1236 1589 1613 2116 2275 2798 3259 3317 3759 3859
# 3915 4279 4352 4479 4977 5167 5216 5247 5419 5815 6039]
#[ 372 1026 1036 2476 3282 3561 3603 4209 4550 4741 4797 4998 5065 5151
# 5362]
#[ 620  700  764  822  918 1020 1645 1748 2276 2282 2291 2629 2755 3036
# 3053 3234 3608 4006 4577 4885 5110 5582 5722 5790 5894 5939]
#[  92  364 2386 2531 2675 3061 3576 3796 4067 4665 5035 6082 6169]
#[ 450  782  821  962 1063 1583 1626 1986 1994 2133 2171 2686 3070 3267
# 3431 4111 4591 4704 4773 4793 5070 5378 5487]
#[ 684 1747 1803 2166 2169 2227 2437 2527 2622 2940 2953 3445 3449 3612
# 4350 4355 4446 4877 5179 6078 6221]
#[  44  133  325  336  590 1289 1588 1883 2097 2605 2684 2756 4976 5319
# 5581 5935]
#[1900 3758 6207]
#[ 568  883 1019 1280 1823 2578 2597 3023 3253 3672 3973 4331 4596 5225
# 5412 5970 6041]
#[ 572 1229 1257 1483 1875 2441 3486 3571 3599 4047 4175 4774 5320 5429
# 5680]
#[ 509  715 1476 1680 1778 2554 2923 3509 3794 4024 4062 4715 5285 5484
# 5694]
#[ 519 1291 1466 3290 3342 3847 4043 4094 4269 4842 5159 5438]
#[1361 1681 4794 4835]
#[ 432  649 1013 3724 3954 4735 5492 5863 5867 6188]
#[1029 1397]
#[ 593 1715 1796 2058 3129 3332 3839 4257 4314 4438 4859 5255 5475 5718
# 5806]
#[ 283  309  532  577  610  639  689 1262 1761 2230 2249 2409 2511 2589
# 2980 4556 5402 5571 5672]
#[  37  736 1102 1253 1621 1653 1718 2056 2142 2563 3413 4681 5184 5304
# 5592 5687 5915 5995 6048]
#[ 245  485  767 1027 1105 1141 1207 1939 1953 2177 2740 2909 3323 3489
# 4536 4954 5149 5644 5645]
#[ 400  576  854  980 1116 1188 1362 1733 2299 2723 3443 3450 3671 3894
# 4001 4374 4426 4566 4646 4825 5050 5233 5267 5660 5713 6006 6030]
#[ 706 1108 1353 2024 2052 2359 2429 3467 3926 4324 4643 4716]
#[  76  504  539  768  904 1038 1160 1854 1972 2228 2453 2538 2681 2870
# 3298 3428 4054 4082 4754 5649 6127 6159]
#[  73  705 1384 1416 1744 2295 2598 2625 2978 3187 3654 4244 4271 4460
# 4760 4948 5574 6274]
#[ 717 1488 1925 2516 2779 2891 2936 2986 3496 3525 3616 3642 3681 3851
# 3862 4402 4531 4758 5080 5176 5605 5745 6154]
#[  12  340  477  556  644  819  828  951  960 1287 1541 1827 1855 1870
# 1961 2049 2585 2711 3076 3541 3559 3602 3865 4174 4503 4522 4661 4782
# 4941 5042 5601 5810 6009]
#[ 233 1605 2059 2088 2815 2912 3066 3120 3225 3343 4093 4440 4867 5085
# 5336 5483 5979]
#[ 121  799  928 1716 2090 2107 2541 3698 4398 4900 5019 5076 5885]
#[ 280  441  559  965 1335 1390 1448 1684 1956 2674 3344 3444 3506 3578
# 3951 3952 4375 4510 4919 5027 5275]
#[ 259  501  690  754  820 1046 1469 1534 2388 2692 3141 5430 5594 5934
# 6015 6016]
#[ 145 1651 1919 2289 4277 4600 5015 5044 5135]
#[ 604  944 2277 2345 2766 4743 5740 5781]
#[   6  104  331  338  665 1252 1538 1699 1941 2031 2311 2336 2439 2624
# 2739 2833 3400 3818 3940 3942 4028 4238 4320 4706 5164 5563 5909]
#[ 250  589  873  877 1150 1213 1523 1877 2165 2312 3069 3371 3633 3823
# 4134 4829 5322 5738 5884 6136]
#[  38   98  111  176  465  787 1061 1867 2241 2678 2789 2878 2902 3384
# 3560 3710 4088 4353 4913 4970 5272 5580 5847 6022]
#[  80  496  515 1203 1537 1688 1729 1997 2094 2292 2371 2862 3216 3324
# 3417 3629 3809 4424 4563 5890 6020 6148]
#[ 785 1328 1372 1452 1785 1833 1851 2148 2298 2664 2778 2908 2943 3268
# 3394 3540 3848 3930 3950 4145 4308 4466 5102 5111 5387 5820]
#[ 674 1169 1327 1899 2967 3307 3339 3363 3782 5006 5009 5183 6137 6215]
#[ 355  643  933 1137 1572 2095 2689 2821 3956 4210 4211 4249 4357 4589
# 4710]
#[  46  518  557  722 1133 1379 2800 3335 3451 4159 4306 5421 6209]
#[  48   60  170  255  448  742  987 1114 1383 2370 2841 3292 3650 3726
# 4234 4636 4799 4836 5089 5145 5374 5683 6225 6263]
#[ 267  463  921 1174 1358 1965 2008 2135 2173 2535 2955 3262 3404 3735
# 3751 3789 4048 4051 4119 4281 4365 4524 4890 4980 5025 5162 5529 5625]
#[  47   89  217  429  707  750  907  947  976 1086 1438 1665 1724 1951
# 2034 2323 2434 2543 2642 2895 3433 3476 4169 4184 4529 4813 5121 6068
# 6076 6198]
#[ 286  660  833  851  895  995 1277 1895 2029 2037 2063 2220 2451 2542
# 2667 2708 2731 3016 3244 3705 3943 4130 4395 4492 5177 5427 6252]
#[ 260  547 1226 1609 1806 1980 2121 2229 2308 2771 2903 2925 2944 3071
# 3516 3538 3897 3936 4586 5181 6168]
#[ 945 2018 2075 3025 3173 3620 3908 4090 4539 4722 5762 6093 6164]
#[ 303  984 1098 1658 1660 1834 2553 2590 2680 3143 3716 4075 5265 5850]
#[ 326 2117 3082 4225 5069 5109 5306 6265]
#[1144 2143 2759 3109 3263 4217 4366 4876 5097 5248 5613 5853]
#[  16  564  716 1342 1455 1568 2093 2608 3193 4144 4497 4684 4821 4982
# 5994 6253]
#[  53  186  524  793  839 1244 1315 1508 1938 2130 2413 2611 3217 3226
# 3300 3380 3439 3765 4288 4373 4933 5011 5221 6243]
#[ 346  585 1546 2050 2670 2735 2848 3131 3393 4095 4099 4410 4517 5189
# 5471 6109]
#[ 834  970 1090 1782 2257 2294 2474 2500 2816 2819 3303 5742 5776]
#[ 529  680  786 2119 2491 3110 3356 3622 3670 4436 4632 5194 5668 5978
# 6105]
#[ 607 1069 1096 1163 1552 2459 2662 3055 3841 4003 4345 4474 5389 5445
# 5511 5624 5821 5859 6141 6152]
#[  25  107  284 1196 1288 1648 1686 2264 2337 2469 2499 2513 2767 3552
# 3661 4096 4196 4870 5211 5489 5541 5679 5856 5925 6025]
#[1904 2701 2952 3463 3845 4405 4839]
#[  17  462  770 1104 1356 2396 2704 4190 5142 5146 5401 5481]
#[  28  373  992 1641 1798 2170 2548 2592 2961 3050 3500 3519 3557 3645
# 3835 4978]
#[2262 2373 2456 3022 3199 3240 3798 4231 4930 5258 5369 6040]
#[ 315  646  892 1084 1273 2362 2700 3014 3057 3367 3542 3855 4080 4122
# 4147 4378 4668]
#[ 917 1054 1075 1616 1876 2556 3021 3811 4263 5139 5203]
#[5626]
#[ 991 1239 1545 2079 2431 2623 2832 2897 3573 3869 3923 4255 4322 4679
# 5113 5296 5305 5551 5618 5643 5930 6092 6174]
#[ 844  943 1089 1171 1224 1736 3074 3454 3762 3984 4389 5544 5861]
#[ 811  916 1555 1573 2161 2481 2583 2805 2991 3149 3213 3321 3719 3996
# 4838 4869 5007 5078 5390 5547 5568 5689 5811 5854 6021]
#[ 633  852 1180 1222 1380 1496 2381 3215 3313 4052 4301 4348 4488 5685
# 5851 6248]
#[ 190 1017 1197 1324 1832 2158 2334 2550 3117 3205 3388 3770 3797 4162
# 4515 5968 6117]
#[   7  617 1857 1893 2225 2248 4098 4193 4490 5303 5347 5744 5747]
#[ 525  990 1076 1409 2160 3746 4125 4136]
#[ 199 4605 4651 5398 5756 5758]
#[ 343 1001 1451 1522 1593 1963 2140 3986 4046 4702 4942 5344 5416 5658]
#[ 598  896  953 1321 2226 4895 5094 5990 6089]
#[1849 2892 3064 3065 3924 4020 4724]
#[ 484  608  613 1234 1306 1500 1696 1797 2035 2224 2631 3281 3319 3720
# 4407 4956 5082 5796 6175 6206]
#[ 181  188  420  490  553 1148 1338 1659 1943 2192 2993 3221 3401 3423
# 3933 4491 5701 6054]
#[1489 1746 1791 3279 4902]
#[ 237 1433 1666 2279 2588 3294 6131]
#[ 139  711  875  914 1005 2957 2996 3243 3744 4021 4295 4519 4770 5576
# 5623 5967]
#[ 252  545  563  867 1445 1535 2365 2555 2751 2852 3094 3121 3425 3802
# 3953 3995 4504 4565 4791 5047 5052 5415 5584 5630 5692]
#[ 198  222  937 1461 2496 3058 3895 4208 4299 4302 4403 6028]
#[3585 4311 4501]
#[ 807 1705 2402 2999 3176 3505 4360 4769 5414 6077]
#[1284 3203 3414 3881 4631]
#[1576 2367 2714 3169 3402 4833 6200]
#[ 115  365  601  629 1312 1799 1808 2366 2458 3185 3804 4783 4920 5117
# 5525 5717 5767 5817 6231]
#[1501 1640 2013 2103 2288 2669 4167 4506 4763 5274 5852]
#[ 738 1091 1192 1297 1412 2424 2552 2635 2811 3258 3521 3550 3666 3814
# 3856 4335 4871 4911 5503]
#[  36  187  537 1199 1220 2195 2274 2479 3062 3312 3678 3825 4239 4397
# 4417 4473 5000 5023 5271 5308 5993 6278]
#[1527 2287 3206 5813]
#[ 302  681  932 2836 3266 4069 4967 5840]
#[1042 1525 3107 3130 3555 3667 4995 5659]
#[  20  471 1044 1250 1308 2060 2179 2329 2340 2772 2856 2877 3140 3155
# 3510 3773 4000 4621 5350 5497]
#[  21   63   93  109  288  838  989 1245 2328 3084 4282 4530 4675 4849
# 5575 6100]
#[ 211  244 1470 1561 1735 2085 3219 3310 3481 3596 4171 4552 5066 5133
# 5513 5750]
#[  23 2198 2899 3246 4448 5420 5729]
#[ 523 2245 3938 4201 5386]
#[1161 1753 2162 2777 3501 3529 4946 5452 5495 5535 5719 5940 5964 6026]
#[ 411 1183 1256 1708 1920 2128 3649 3964 4142 5238 5827]
#[ 124 3906 3992 5359 5974 6099 6170]
#[ 626  862 2039 2644 3035 3378 3531 4418 5408]
#[1167 2246 3315 3415 3918 4551 4583 4745 5365 5577 5662]
#[2636 3147 3156 4465 5699]
#[   0  126  197  337  433  555  594 1417 2002 2101 2199 2310 2817 2956
# 4520 5358 5962 6240]
#[ 825 2084 2191 2201 3379 3784 4327 6212]
#[ 100  119  658 1294 3316 3490 3604 4339 5004 5636]
#[ 180  900 1786 1931 3137 3593 3725 4181]
#[  19   33  482 1243 1301 1766 1790 1937 2074 2842 2983 3162 3398 4100
# 4471 4732 4981 5051 5423 6270]
#[  39  988 1477 1878 5208 5297 5673 5752]
#[ 144  314  561  694  957 1191 1333 1443 1462 2015 2040 2272 2559 2613
# 2938 4187 5026 5230 5540 5566 5897 5944]
#[ 209 2244 3480 3503 5556]
#[ 106  371  950  964 1370 1381 1408 1678 1964 2321 2758 2884 2968 3328
# 3707 4245 4610 4781 5074 5418 5424 5515 5526 6029]
#[ 194  291  394  910 1071 1598 1671 1842 3153 3452 3696 4313 5280 5357
# 5482 5593 5667]
#[  24  159  391  440  513 1100 2319 2881 3257 3276 3372 3482 3547 3916
# 3988 4220 5477 5620 6130 6150]
#[ 231  253  458  721 1228 1564 1625 1723 1783 1962 2061 2330 2617 2747
# 3013 3309 3799 4137 4186 4312 4692 4903 4922 4979 5157 5534 5562 5969
# 6035 6038 6094]
#[   1 1934 1954 1985 3904 4656 5598 5787 5893 5965]
#[  55 2361 4570 4581 5279 5946]
#[  22  516  606  678  696 1009 1070 1249 1814 2036 2104 2174 2181 2326
# 2724 2814 2910 3617 4361 4439 5115 5825 5900 6042]
#[  85  236  679 1402 1559 1879 2558 3104 3718 4881 5192 5250 5289 5314
# 6027]
#[ 405  453  827 1074 1164 1550 1952 2657 2665 2677 2734 2867 3592 3971
# 4481 4542 6073]
#[ 362  788  879 1575 1912 2167 2883 4938 5512]
#[6235]
#[3269]
#[ 185 1010 1053 1198 1594 1944 3102 3736 3743 3810 4800 4992 5218 5465
# 5708 5857 6197]
#[1826 4714]
#[ 216  978 1152 1217 1415 1863 2006 2564 2846 3805 3857 4138 4918 5243
# 5405 6062 6095]
#[ 464 1914 2000 2146 3873 3911 5190 5464 6003 6264]
#[1434 1995 2028 2581 2894 3054 3105 4848 5406 5523 5604 5720 5836 5914
# 6055]
#[ 153  653  956 1210 1332 1371 1375 1393 1674 1730 1789 1835 1859 1915
# 2016 2309 2992 3011 3745 4368 4637 4738 4807 5242 5640]
#[ 225 3939 4321 4972 6045]
#[1506 3523 5030]
#[  30   49  282  305 1130 1182 1499 1992 2658 2806 2840 3002 3252 3340
# 3686 3747 3786 5166 5670 5876 6146 6181 6255]
#[1015 1494 1591 1780 2521 2547 2672 2875 3421 3453 4015 4307 4445 4562
# 4587 4609 4887 5200 5201 6227]
#[ 300  659  702  758 1057 2110 2197 2465 3418 3526 3656 4614 4658 4815
# 5031 5207 5646 5688 6140 6208]
#[  75  567  925  946 2120 2178 2466 2825 3049 3095 3419 4376 4950 5210
# 5299 6232]
#[1065 1403 2067 3230 3338 4421 5363]
#[ 747 2572 5434]
#[1685 1996 2570 3046 3150 3238 3458 3694 4677 4749 4894 5866]
#[ 324 1006 5262 5342]
#[ 154 1292 1529 2186 2522 2577 2845 3492 5075 5093 5118 5315 6267]
#[ 447  483  780  816  986 1670 2666 2761 2863 5103 5337 5561 6129]
#[ 150  164  210  836 1265 1624 1721 1846 1999 2045 2187 2237 3006 3358
# 3581 4131 4338 4525 4788 4840 4983 5677 5822 5976 6245]
#[ 248  596 1950 2023 2218 2502 2639 2645 2788 3052 3194 4535 4753 5010
# 5022 5832 5953 6124 6258]
#[  99  935 1520 2190 2695 2969 4045 4342 4666 5343 5669]
#[  26  143  329  500  507 1109 1628 1639 1869 2278 2831 2866 3097 3195
# 3545 3829 4359 4628 4748 4872 4961 5254 5917 6257]
#[ 470  655  668 1176 1776 1815 2202 2422 3048 3115 3160 3512 3535 4165
# 4428 5841 5858 5870 6122]
#[ 251 1432]
#[ 396  587  903 2858 3177 3958 4261 4592 6120]
#[1930 2471 2682 3041 5112 5462 5770]
#[2795 3360 3583 5373 5442 5548]
#[  32  257  648  693 1135 1260 2303 2313 2828 2984 3549 3843 4042 4146
# 4363 4377 4409 4907 5674 5765]
#[ 339  356  605  714  784 2300 2801 2849 3757 4059 4074 4085 4461 4680
# 4988]
#[ 182  570  958 1242 1542 1768 1844 2105 2301 2435 2557 2591 2979 3375
# 4343 4572 5012 5301 5457 5783]
#[1720 3164 4384 4608 6060]
#[ 966 2651 4449 5844 6014 6185]
#[ 603  772 1773 3572 3588 4496 5617 5705 5987]
#[ 651 2596 3403 3634 3669]
#[ 168  306  801 2764 2804 2985 3333 3962 4192 4328 4823 5222 6108]
#[ 642 1214 1298 1350 1820 2255 3145 3271 3456 3613 3750 4274 4290 4687
# 5380 5565 6187]
#[  52  395  415 1644 2640 2927 3373 3640 4507 4858 5382 5860]
#[  84  597  650 1526 1872 2810 2896 3390 4253]
#[ 618 1115 1731 2258 2297 2348 3860 3890 4634 4664 4669 4766 5129 5432]
#[ 667 1037 1389 1692 1825 2102 2671 2835 4317 4463 4612 4927 4958 5138
# 5621 6079 6241]
#[  58  264  279  461  647  996 2423 2492 2568 2753 2760 2911 3416 3499
# 4477 5209 5295]
#[ 234 1016 2209 2626 2729 3397 3730 6033]
#[ 410  891 1030 2020 2129 2935 3033 3183 3255 5298 5532 6102 6104 6284]
#[ 718 1274 1781 2145 2268 3764 4254 4647 5539 5882]
#[ 472 1886 4198 4744]
#[2787 2874 3949 4442 4454 4580 4966 5975]
#[3882 4861]
#[ 359  399  455 1471 1558 1973 2005 2464 2540 2769 3139 3314 3570 4151
# 5240 5287 5413 5805]
#[  31  344  374  929 1578 2885 4486 5008 5127 6023]
#[  74 1891 2929 3015 3043 5014]
#[ 968 1344 1638 2316 2393 3196 3780 3917 5723]
#[ 140  220  492 1917 2003 2713 3227 3424 3740 5045 5700]
#[ 146 1092 2813 3112 3507 3732 3965 4394 4672 5549 5611 5777 6160 6282]
#[ 460 1571 1574 1612 3068 3662 4203 4400 4601 5615 5773 5973 6260]
#[  91  333  535  739 1184 1364 1929 2358 2621 2720 3346 3970 4041 4112
# 4750 5327 5403 5709 5924]
#[4132 4984]
#[1544 1695 2350 2395 2463 2698 3833 4824]
#[  59  165 1033 1926 2951 4229 4246 5054 5174 5339 5368 5486 5849 5880
# 6088 6107]
#[ 321  367  376  708  894  909 1548 1947 2057 2719 3051 3345 3527 4030
# 4212 4346 4899 4951 5005 5083 5830 5999 6071 6213 6254]
#[ 417  569  982 1251 1330 1818 3260 3695 5439 5985]
#[  69  412  451  652  967 1426 1511 1967 2785 3063 3685 3927 4002 4541
# 4625 5077 5633 5872 5902]
#[ 294  941 1843 1969 3625 4915 5040 5196]
#[5956]
#[1861 2432 2890 2907 3232 3264 3477 4179 4382]
#[ 149  242  805 1225 1351 1547 1816 2022 2089 2696 3212 3664 4178 4309
# 4383 4396 4452 4476 4652 4659 4931 5260 5409 6147 6191]
#[ 390 1570 1611 2824 2873 3008 3060 3703 3989 4905]
#[ 503  637  641  776  931 1040 1094 1193 1979 2243 2420 2865 2974 3100
# 3369 4272 4401 4727 5195 5197 5755 5846 6119]
#[   4  407  499  752 1043 1151 1172 1755 2159 2648 2820 3146 3349 3518
# 3769 3803 4495 4660 4803 5329 5352 5528 5585 5743 5746]
#[1278 2251 4092 4544 4736 4909 5377 5555 5788]
#[  57 1635 1690 4060 4447 6281]
#[  34  542 1325 2154 2193 2712 3067 3399 3849 3961 4107 4115 4126 4230
# 4548 4594 4624 4893 4987 5232 5249 5567 5824]
#[ 292 1460 1754 1774 2066 2443 3042 4019 4108 4157 5410 5711 5816 5892
# 6268]
#[1035 1436 2014 2118 2164 2236 2494 2732 2987 3163 3170 3366 3464 3800
# 5450 5607 6155]
#[ 384  505 2256 2333 2791 3465 3643 4569 5046 5929]
#[  68  843 1103 1145 1186 1318 1841 2472 2485 2928 3644 3801 3932 4412
# 4425 4546 4965 5220 5237 5251 5997 6074]
#[ 600 1012 1080 1154 1341 1424 1491 1717 2382 2410 2566 2738 3336 3548
# 4017 4133 4380 4516 5393 5676 5988 6110]
#[1266 1442]
#[  65  177  192  398  632  734  865 1524 1770 1928 2134 2259 2401 2905
# 2998 3977 4391 4607 4808 4973 5370 5629 5696 5733 6256]
#[ 151  663  771 1175 1339 1498 1853 2155 2265 2284 2468 2726 2904 3172
# 3408 3432 3586 3828 3852 4068 4227 4494 4588 4765 4798 4986 5073 5147
# 5187 5446 5456 5502 5520 6269]
#[ 388  552  919  939 1122 1569 1694 1848 3211 3582 4316 6046 6144]
#[  71  270  669 1031 1159 2026 2595 2886 3202 3254 3308 3945 4143 4696
# 5032 5088 5217 5318 5801 5906]
#[ 435  454  924  949 1014 1059 1072 1255 1302 1702 1751 1837 1905 3009
# 3392 3863 4330 4694 4879 4968 5150 5366 5639 6036 6101 6133 6247 6276]
#[ 887 1850 3905 4472 4511 4571 4671 5383 5449]
#[   5   83  806 1056 1062 1551 1913 1974 2433 2562 2641 2652 3119 3134
# 3365 3589 3637 3876 4613 4712 4812 5122]
#[ 299  357 1110 1223 1528 1577 1862 2354 2399 2452 2606 2843 2906 2963
# 3651 3676 3737 3754 3838 4149 4635 4731 4844 5288 5588 5981]
#[ 134  137  479  829 1060 1231 1232 2125 2175 2290 2322 2576 2679 2685
# 2737 3111 3485 4084 4283 4362 4513 4597 4603 5732 5938]
#[ 631 1821 2083 3530 3598 3931 4367 4564]
#[ 256 1136 1307 3396 3427 3889 4114 4297 4498 4678 5433]
#[ 201  289 2021 2374 2741 3000 3517 3556 3635 4191 4846 6011 6222]
#[  50  110  169  212  273  383  713  783 1134 1208 1519 1813 1927 2004
# 2137 2150 2488 3086 3836 4102 4127 4455 5063 5546]
#[ 573 1906 2269 2356 2990 3440 4644 5136 5654 5886 5984]
#[ 235  760  808 1726 1858 2317 2397 3047 3289 3495 3922 4251 4560 5376
# 5557 5608 6238]
#[  27   61  476  522  841  886 1050 1126 1138 1439 1521 1689 1910 2217
# 2444 3446 3636 3708 4232 4784 5029 5155 5283 5459 5614 6052]
#[  42  254 1495 1710 1737 1775 1987 3981 4199 4921 5060 5064 5178 5360
# 5780 5957 6123 6195]
#[ 824 2643 2673 3473 3631 3647 3660 3673 3827 3874 4163 4180 4453 4962
# 5038 5175 5789]
#[ 491  494  853  856  880  930 1127 1360 1672 2069 2144 2551 3385 3563
# 3577 3817 3878 3990 4008 4135 4381 4518 4629 4642 4707 5244 5469 5697
# 5753 5771 5874 5982 6178]
#[  66  732  826 1238 1478 1772 2302 2525 2565 2799 3468 3567 3850 4576
# 4778 4790 4906 5048 5212 5591 6049 6180]
#[1155 2082 3587 5905 6126]
#[ 488 1431 1539 3144 3840 4390 4615 5169 5848]
#[ 861 1467 1750 2533 2702 2718 2721 2900 3088 4101 4467 4627 4880 5395
# 5470 5600]
#[ 268  363  546 1268 2428 3484 5710 5797]
#[ 218  369 1398 1463 1819 1831 1968 2614 3122 3222 3237 4325 4721 4725
# 4875 5018]
#[ 298  421 1003 1486 1677 2880 3186 3487 3903 4626 4657 4789 4847 5021
# 5554]
#[ 312  858 1309 1331 1936 2222 3175 3354 4689 5316 5454 5666 5839]
#[  13 1156 1185 1237 1437 1441 1606 2252 2425 2427 2483 3118 3711 3822
# 4066 4298 4575 4822 4993 5173 5199 5516 5599 5741]
#[ 228  378  486  878  902 1276 1316 1503 2132 2615 2977 3534 3944 4430
# 4499 4533 4932 5185 5323 5375 5407 5759 5952 6149 6171 6223]
#[ 538  588  615  698 1404 1713 2325 2438 3296 3870 3902 4826 4901 5268
# 5472 5552 5889 6277]
#[ 114  203  609 1028 1627 1734 1888 1940 2188 2517 2627 2947 3123 4574
# 4640 4683 4759 4768 4908 4960 5132 5519 5657 5769 5782 5972 6098 6272]
#[ 178  334  727  809 1567 1777 2377 2405 2545 3166 3591 4077 4323 4649
# 5156 5332 5798 6013]
#[ 377  489 1008 1119 2271 2536 2733 3248 3422 3429 3741 4009 4284 4717
# 4728 4830 4863 4999 5144 5307 5345 5428 5480 5602 5804 5845]
#[ 566 1282 1517 1614 1667 2335 2501 2770 2860 3539 3677 4456 5099 5335
# 5533 5648 5829]
#[ 673 1484 1532 1793 2185 2529 2655 3168 3242 3334 3781 3820 4050 4081
# 4964 5067 5158 5245 5284 5698 6190]
#[ 102  549  913 1427 1908 1922 2235 2582 2654 3287 3364 3768 4247 4487
# 4785 4990 5016 5356]
#[1247 1367 1425 1749 1800 2901 3888 3979 5120 5309 5682 5948 5986 6005]
#[ 285  418 1295 1421 2205 2446 2549 2786 3436 4387 4478 4837 5056 5213
# 5246 5276 5779 5936 6002]
#[ 544  630  670  703  871  948 1368 2098 2286 2436 2850 3471 3554 3913
# 4189 4709 4804 4817 4827 5055 5351 5735 5945]
#[ 536  751 1270 2803 3520 3778 3999 4268 5522 6239]
#[ 246  753  804 1066 1142 2189 2661 2782 3233 3537 4013 4213 4315 4623
# 4662 4943 5257 5331]
#[ 685 3816 4243 4862 4904 5252]
#[ 271  370  430 1218 1317 2147 2211 2223 2419 2620 3132 3351 3466 4431
# 4573 4810 5521 5570]
#[ 578 1041 1405 1602 1745 1779 2114 2612 2727 2794 2921 2988 3680 4023
# 4358 4437 4523 4924 5558 5559 5641 5706]
#[ 266  699  765 1454 1507 2196 2339 2792 3096 3178 3819 5141 5590]
#[  15  584 1285 1406 4032 4252 4408 5932]
#[ 709  779  810  823 2046 2070 2250 2418 2450 2649 2660 3028 3037 3251
# 3411 3639 3959 3968 4224 4416 4484 4598 4795 5058 5072 5273 5396 6087]
#[  18  773 1128 1601 2518 3056 3522 3787 4070 4811 5578 6112 6186]
#[ 125  349  360  401  692  766 1022 1049 1095 1366 2346 2400 2749 2960
# 3089 3497 3824 4214 4458 5091 5182 5651 5748 6056 6139]
#[1216 1479 1513 2176 2307 3181 3368 4016 4026 4153 4385 4705 4856 4936
# 4959 5239 5394 5785 5795 5888]
#[ 117  317  341  733 1336 1391 1607 2139 2157 2352 2573 3204 3286 3702
# 4010 4034 4777 4845 5485]
#[ 574  963 1181 1230 1313 1347 1764 1767 1874 2933 3214 3668 3791 4223
# 4483 5831]
#[695]
#[  97  174  195  425  428  728 1599 1801 2722 2853 3005 3154 3305 3775
# 3867 3884 3928 4025 4103 4117 4170 4218 4650 4832 4841 5168 5193 5224
# 5379 5466 5650 5702 5712 5809 5937]
#[ 310  664 1536 1701 2240 2946 4270 5392 5757 5918]
#[ 619  842 1211 1429 3231 4248 4616 5530 6031 6116 6196]
#[ 290  551  741  790 1112 2027 2212 2404 2868 2869 3190 3812 3969 5458
# 5684 5855 6096]
#[  11  307  498  640 1369 1388 1822 2462 2691 2939 3038 3494 3697 4693
# 5494 5734 5926 5933 6057 6214]
#[ 118  148  386  392  427  459  520  672 1472 1988 2314 3158 4058 4089
# 4337 4432 4434 4470 4567 4619 4674 4957 4994 5730 6266]
#[  43  208  316  320  422  436  487  719  952 1067 1326 2357 2467 2487
# 2587 2676 3502 3771 3879 4267 4419 4462 4514 4602 5037 5057 5400 5478
# 5542 5586 6037 6244]
#[ 837 1078 1178 1497 1991 2109 2539 3777 3793 3963 4014 4469 4673 4805
# 5474]
#[ 123  157  229  493  580  595  662 1079 1345 1359 1662 1840 2168 2460
# 2728 3167 3376 3377 3483 3772 3880 4341 4553 4718 4764 5114 5444 5596
# 5864 5961 6007 6132 6199]
#[  95  224  406 1087 1407 1512 1557 2920 2932 2964 3280 3544 3715 4182
# 5081 5161 5550]
#[ 726  763  791 1549 1984 4262 4527 4752 4910 5364 5800 5922 6115]
#[ 213  308  475 1077 1206 2826 2916 2989 5505 5510 5681 5686 5877 5959]
#[ 328  389  416  571 1101 1106 1290 1738 2122 2254 2379 2457 2638 2970
# 3019 3355 3441 4399 4701 5062 5341 5727 5923 6189 6203 6246]
#[ 506 1562 1898 2096 2214 2449 2537 2705 3861 4083 5631 5634 5664 5794
# 5862 5869 6034]
#[ 342  792  815 1246 1661 1679 1756 1946 1990 2693 3003 3152 3382 3641
# 3808 4831 5346 5391 5399 5595 5835 6070 6125]
#[   9  243  261  368  533  661  677  860  955 1132 1283 1394 1650 1881
# 2560 3032 4183 4204 4219 4851 5436 6084 6172 6242 6249]
#[1582 2349 2796 3806 3946 4296 6157]
#[ 683  724 1428 1807 1860 1983 2131 2412 2473 3223 3691 3868 5865]
#[ 675 1158 3434 4865 5128 5355 6091]
#[ 575  882 1481 1565 1909 1959 2520 4064 4078 4356 4393 4543 4582 4729
# 5338 5425 5536 5837 6138]
#[ 550  778  901 1064 1447 1600 1728 2019 2375 2630 2650 2822 3405 3785
# 3788 3941 4037 4558 5059 5531 5583 5899 6010 6283]
#[ 889  890 1157 1323 1556 1615 1675 2062 2068 2369 2505 2544 2893 2934
# 3653 4329 4388 5286 5317 5921 6176 6219 6251 6259]
#[  88  352  898 1088 1485 1487 2296 2683 2687 2697 3030 3124 3329 3370
# 3533 3679 3896 3978 4160 4215 4259 4260 4319 4340 5160 5204 5264 5488]
#[  90  127  191  227  375 1007 1286 1382 1531 1709 1828 1918 2011 2149
# 2184 2391 2445 2486 2534 2619 2768 2971 3136 3272 3597 3689 4242 4294
# 4698 4883 4929 5003 5126 5235 5527 5635 5691 5803 5983]
#[  81  130  171  206  419  899 1018 1118 1195 1387 1587 1882 2106 2112
# 2510 2546 2837 2838 2847 3020 3594 3693 3755 3795 3898 3907 3921 4152
# 4303 4549 4761 4882 5124 5125 5152 5294 6210 6250]
#[3763]
#[ 414  581  983 1000 1707 2802 2823 2913 3091 3171 3626 3628 3872 4349
# 4620 4633 5282]
#[2086 4767 5300]
#[2415 2593 3174]
#[ 205  638  795  813  961 1311 1784 2092 2100 2876 4237 5764]
#[ 621  796 1516 2115 2489 2950 2973 3182 3318 4166 4310 4509]
#[1530 2385 2600 3630 3974 4079 4173 4444]
#[1173 1261 2478 2603 2774 3288 5206 5277]
#[1810 2949 4554]
#[  82  313 1177 2586 4351 4928 5020 5324 5610]
#[  29  408  409  541 2152 3607 3727 3866 4035 4158 4172 5960]
#[3106 3738 4886 5799]
#[   3  866 1420 1693 3709 3997 4855 4926]
#[4703]
#[ 155  196  385  789  859 1058 1400 1456 1892 2455 2523 2851 2926 3692
# 3960 5293]
#[ 322 1215 1509 2182 6163]
#[ 438 1303 1836 2077 2477 3524 3967 4578 4590 5883]
#[ 358  426  543  849 1817 2347 4508 4540 4740 4802 5261]
#[1002 1970 2267 2389 2493 2742 3179 4332 5234 5443]
#[2426 3165 3239 5367]
#[3083 3982 4038 4073]
#[ 272  297  936 1505 1590 1657 2364 2394 2498 2506 2781 3447 3478 3491
# 3569 3891 5101 5819]
#[1143]
#[1560 2976 4579 5655]
#[ 351  686 1464 1945 2353 2633 2743 3125 3658 5281]
#[ 281 1275 1450 2054 2408 3024 3348 5786 6065]
#[1200 2180 2342 2363 2790 2797 3235 3470 5499]
#[ 457 3842]
#[1430 3352 4618 5116 5690 6012]
#[ 884 1933 2030 2484 2954 4228 5013]
#[2041]
#[ 562  863 1349 1714 2285 2882 3126 3407 3684 4670 5435]
#[1652 2745 3683 4044]
#[1480 2234]
#[ 136  173  269 1097 2242 2305 3283 3609 3742 3749 3821 3935 4221 4989
# 5084 5123 6103 6113]
#[ 221  517  656 1052 2490 5791]
#[ 332  850  869  881  942 1459 1631 1830 2032 2260 2574 2746 2775 3362
# 3618 3701 3761 3813 4121 4923 5868 6121]
#[ 202  446  817 1048 1140 2207 2270 2368 2610 2628 2703 3386 3493 3688
# 4056 4110 4420 4459 5043 5100 5518 5878 6053]
#[ 761 1623 1795 3001 3302 3435 3504 6017]
#[ 131  175  443 1212 1399 3085 4559]
#[ 219 1643 1646]
#[ 908 1739 1742 1804 2561 4708 4944 5186 6047]
#[  35  113  142 1139 1741 1812 2001 2834 2918 3018 3128 3353 3790 3900
# 3920 3998 4061 4086 4287 5461 5514 5627 6085]
#[1596 1890 1916 2601 2699 3562 5263 5506]
#[ 354  473  628  855 1082 1125 1377 3395 3704 4682]
#[ 534 2183 2253 3079 3409]
#[ 296  497 1099 1258 1410 2341 3077 3621 3893 4280 4639 5092 5266 5652
# 5814]
#[ 184  560  687 1385 1468 2331 5198 5321 5828]
#[ 301  591  975 2266 2532 2793 2948 3387 4354 4747 5086 6059 6080 6165
# 6224]
#[  77  262  350  495 2694 2914 3256 3331 3619 3993 4139 4168 4285 4653
# 4695 4953 5349 5440 5628 5942 6179]
#[ 682  818 2571 3188 4952]
#[ 263 1971 2076 3937 4912 6182]
#[2754 4406]
#[1465 3844 4379 4776 5622]
#[ 404 1885 4545 5068]
#[  78  798  812 1395 1475 1668 1706 3528 3564 4868 6229]
#[ 275 1272 2812 3614 5507 5834 6177]
#[ 230  327  402  973 2065 2081 2839 3081 3488 3515 4007 4161 4336 4852
# 5325 5460 6001 6228]
#[ 893 1449 1453 2273 2507 2765 2879 3191 3229 3832 4719 4819 5039 5137
# 5202 5715 6205]
#[ 238  249  723  985  997 1107 1190 1320 1411 1871 1897 3201 3265 3553
# 3983 4429 4699 4828 5453]
#[  62  112  467  531  691  749  920 1032 1045 1419 1435 1493 1554 1993
# 2087 2138 2646 2653 2716 2958 3180 3200 3285 3327 3420 3475 3712 3929
# 4071 5227 5259 5716 6064 6111]
#[ 122  330  478  654  857 1083 2042 2304 2762 3322 3899 4004 5024 5385
# 5707]
#[ 161  347  512 1654 1656 2053 2078 2113 3103 3934 4878 6069 6234]
#[ 241  554 1620 1982 2376 3306 3330 3383 4106 4667 5134 5310 5451]
#[ 156  319 1149 1649 2064 2829 3508 3624 3994 4063 4065 4654 5041 5553
# 6156 6161 6262]
#[ 152 1373 1473 1595 1669 2099 2123 2417 2930 3078 3442 4241 4779 4850
# 4857 5049 5467 5468]


